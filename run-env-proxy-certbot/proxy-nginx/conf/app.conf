# pouzivany na produkcii - treba manualne nakopirovat na produkciu do /home/run-env-proxy-certbot/proxy-nginx/conf/app.conf
# (a tiez naopak, po zmenu v produkcii treba app.conf skopirovat do projektu do nginx/conf-prod/app.conf a commitnut)
# subor je commitnuty (ako run-env/conf-prod/app.conf) len koli archivovaniu v repository (aby sme videli zmeny)
# subor je namapovany (a pouzivany) v docker servise frontend v docker-compose-run.yml (pouzivany na spustenie aplikacie na produkcii)

# localhost sa na produkcii nepouziva
#server {
#    listen 80;
#    server_name localhost;
#
#    location / {
#        root /usr/share/nginx/html;
#        #index index.html index.htm index.php;
#    }
#}

# http protokol sa pouziva pri generovani ssl certifikatu pomocou certbot-u
# (bez certifikatu nefunguje https a preto musime na generovanie ssl certifikatu pouzit http)
# (renew certifikatu uz funguje cez https, netreba robit ziadne zmeny v tejto konfiguracii)
# v normalnej prevadzke je asi dolezity posledny prikaz, ktory pridava https ak user nezapise "https" do url-ky (ale neoveroval som to)
server {
    listen 80;
    listen [::]:80;

    server_name car-demo.michalrakus.sk;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://car-demo.michalrakus.sk$request_uri;
    }
}

#server {
#    listen 80;
#    listen [::]:80;

#    server_name car-demo-test.michalrakus.sk;
#    server_tokens off;

#    location /.well-known/acme-challenge/ {
#        root /var/www/certbot;
#    }

#    location / {
#        return 301 https://car-demo-test.michalrakus.sk$request_uri;
#    }
#}

# default port pre https je 443, spustime nginx na porte 443
server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name car-demo.michalrakus.sk;

    # ssl certifikat pre zavolanie frontend-u (GET na url-ke https://car-demo.michalrakus.sk)
    # poznamka: forwardovane requesty na backend pouzivaju tiez tento certifikat (tak je to nakonfigurovane v docker-compose-run.yml)
    ssl_certificate /etc/nginx/ssl/live/car-demo.michalrakus.sk/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/car-demo.michalrakus.sk/privkey.pem;

    # forwardovanie requestov na frontend
	# frontend je docker service vytvoreny v run-env/car-demo-prod/docker-compose-run.yml
    location / {
        #root /usr/share/nginx/html;
        proxy_buffering off; # vypina buffer na nginx-e, request/response by mali chodit priamo na/z nodejs ale ci je to naozaj lepsia volba neviem
        proxy_pass https://frontend:444/;
    }

    # forwardovanie requestov na backend
    # spristupnuje backend servisy na url-ke https://car-demo.michalrakus.sk/backend
    # POZOR! slash "/" na konci /backend/ aj na konci https://backend:8082/ su dolezite, sposobia, ze sa "backend" z url-ky odstrani
    # pre https://backend:8082/ plati, ze backend je docker service (zadefinovany v docker-compose-run.yml) a 8082 je interny docker port (NODE_DOCKER_PORT=8082 v .env)
    # bolo by fajn porty (80, 8082), url-ky (localhost, backend.localhost) vytiahnut do .env)
    location /backend/ {
        proxy_buffering off; # vypina buffer na nginx-e, request/response by mali chodit priamo na/z nodejs ale ci je to naozaj lepsia volba neviem
        proxy_pass https://backend:8082/;
    }
}

#server {
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;

#    server_name car-demo-test.michalrakus.sk;

    # ssl certifikat pre zavolanie frontend-u (GET na url-ke https://car-demo-test.michalrakus.sk)
#    ssl_certificate /etc/nginx/ssl/live/car-demo-test.michalrakus.sk/fullchain.pem;
#    ssl_certificate_key /etc/nginx/ssl/live/car-demo-test.michalrakus.sk/privkey.pem;

    # forwardovanie requestov na frontend
	# frontend-test je docker service vytvoreny v run-env/car-demo-test/docker-compose-run.yml
#    location / {
        #root /usr/share/nginx/html;
#        proxy_buffering off; # vypina buffer na nginx-e, request/response by mali chodit priamo na/z nodejs ale ci je to naozaj lepsia volba neviem
#        proxy_pass https://frontend-test:445/;
#    }

    # forwardovanie requestov na backend (volania https://car-demo-test.michalrakus.sk/backend)
	# backend-test je docker service vytvoreny v run-env/car-demo-test/docker-compose-run.yml
#    location /backend/ {
#        proxy_buffering off; # vypina buffer na nginx-e, request/response by mali chodit priamo na/z nodejs ale ci je to naozaj lepsia volba neviem
#        proxy_pass https://backend-test:8083/;
#    }
#}

# aby prechadzal upload suborov do 100MB (default je 2 MB, co je malo)
client_max_body_size 100M;
