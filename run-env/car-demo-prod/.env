# main configuration file if application runs in docker
# used by docker-compose.yml (if available), docker-compose-build.yml, docker-compose-run.yml

# IMPORTANT - after change, this file must be manually copied (by WinSCP) on production to /home/run-env/car-demo-prod
# because github actions script main.yml only uses this file direct on production
# (if docker-compose-run.yml is used, no checkout and copy to production is executed)

# cislo verzie ktore sa pouzije pri pomenovani vytvaranych/spustanych image-ov (frontend/backend)
# nie je potrebne menit pri vytvarani novej verzie
# (ak ponechame verziu, novy image bude pomenovany starym cislom verzie a predosly image bude "unknown" - bude mat len id-cko image)
# ak zmenime cislo verzie, budeme sa vediet lahko vratit k povodnej verzii (za predpokladu ze vieme downgrade-nut DB) - staci tuto zmenit cislo verzie a restartnut containery
# mozno by bolo fajn tahat cislo verzie z package.json - ale potom treba mat samostatne cisla pre frontend/backend
IMAGE_VERSION=1.0.0

# ak som pouzil POSTGRES_DOCKER_PORT 5433, tak sa DBEaver nevedel pripojit - urcite je to koli tomu ze image "postgres:16.1" ktory spustame v docker-compose-run.yml ma EXPOSE-nuty port 5432 (a nie 5433) (pozri Dockerfile na frontend/backend)
POSTGRES_LOCAL_PORT=5433
POSTGRES_DOCKER_PORT=5432

# POSTGRES_PASSWORD is required, is used by creating DB and by connecting to DB (via variable X_DATABASE_URL)
# password is used only by docker-compose-run.yml and that's why it does not have to be commited in git (is not used by build scripts),
# it must be only present in run-env on Linux VPS
POSTGRES_PASSWORD=<password>
# POSTGRES_USER - default je "postgres" - to je ok
# POSTGRES_DB je nepovinny, sluzi len na vytvorenie DB ak databaza (volume) este neexistuje (inac by vytvaral "postgres" databazu)
POSTGRES_DB=car_demo_db

NODE_LOCAL_PORT=8082
NODE_DOCKER_PORT=8082

X_AUTH=AUTH0
X_AUTH0_DOMAIN=michalrakus0.eu.auth0.com
X_AUTH0_AUDIENCE=car-demo-backend-api
# host for db "postgresdb" is service from docker-compose.yml
X_DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgresdb:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}?schema=car_demo
X_STRING_DB_SEARCH_AI_CI=true
X_LOG_SQL=false
TZ=Europe/Bratislava

NGINX_LOCAL_PORT=81
NGINX_DOCKER_PORT=81

NGINX_LOCAL_PORT_HTTPS=444
NGINX_DOCKER_PORT_HTTPS=444

# zatial len protocol pre backend (nodejs) - HTTP/HTTPS
# musi sediet s protokolom v VITE_BACKEND_URL
X_PROTOCOL=HTTPS
# pre localhost treba pouzit HTTP
#X_PROTOCOL=HTTP

# used for access to ssl certificate, used only if X_PROTOCOL=HTTPS
X_DOMAIN=car-demo.michalrakus.sk

# backend url - defaultne sa pouzivaju porty 80 (http) a 443 (https) - na nich bezi proxy-nginx a forwarduje requesty na car-demo-nginx (na porte 444) a requesty s url-kou "backend" na nodejs (na porte 8082)
VITE_BACKEND_URL=https://car-demo.michalrakus.sk/backend
# pre localhost treba pouzit http://localhost
#VITE_BACKEND_URL=http://localhost/backend

VITE_AUTH_OFF_USERNAME=<username(email)>

VITE_AUTH0_CLIENT_ID=GlE5yWokspWk12w5dnes7nRZ4wEyVvOr

